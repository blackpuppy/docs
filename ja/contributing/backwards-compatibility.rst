後方互換性ガイド
################

アプリケーションを簡単に、円滑にアップグレードができるようになっていることは\
重要なことです。
メジャーリリースのマイルストーンでのみ互換性を破棄するのはそのためです。
全てのCakePHPプロジェクトで使用する全般的なガイドラインである、\
`セマンティックバージョニング <http://semver.org/>`_ について理解したほうが\
良いでしょう。
セマンティックバージョニングとは簡単に言うと、(2.0、3.0、4.0のような)\
メジャーリリースのみ後方互換性を破棄することができ、(2.1、3.1、3.2のような)\
マイナーリリースが新しい機能の導入をするが互換性を破棄することは許されず、\
(2.1.2、3.0.1のような)バグフィックスリリースは新機能の追加はせず、\
バグの修正かパフォーマンスの向上\のみにすることを意味します。

.. note::

    CakePHPはセマンティックバージョニングを2.0.0から採用を始めています。
    これらのルールは1.x系には適用されません。

それぞれのリリースに予定する変更を明確にするために、\CakePHPを使う開発者と\
CakePHPの開発者のために、マイナーリリースでされ得る変更予定の助けとなる更に\
詳しい情報があります。
メジャーリリースは必要に応じて多くの破壊的変更を含むことができます。

移行ガイド
==========

メジャー・マイナーの各リリースについて、CakePHPチームは移行ガイドを提供します。
このガイドはそれぞれのリリースの新機能と非互換な変更を説明します。
これはcookbookの :doc:`/appendices` セクションで見ることができます。

CakePHPの使用
=============

CakePHPを用いてアプリケーションを構築している場合、次のガイドラインで示す堅牢性\
(**stability**)が期待できます。

インターフェース
----------------

メジャーリリース以外では、CakePHPが提供するどんな既存のメソッドの\
インターフェースも変更 **されません** 。
新しいメソッドは追加されますが、既存のメソッドは変更されません。

クラス
------

CakePHPが提供するクラスを構成する、アプリケーションから使われるpublicなメソッド\
とプロパティがメジャーリリース以外で後方互換性が保証されます。

.. note::

    CakePHPのいくつかのクラスは ``@internal`` APIドキュメントタグがつけられています。
    これらのクラスは堅牢 **ではなく** 、後方互換性は約束されていません。

マイナーリリースでは、クラスに新しいメソッドが追加されることがあり、
既存のメソッドは新しい引数が追加されることもあります。
新しい引数は必ずデフォルト値を持ちますが、異なる引数の形式でメソッドをオーバー\
ライドしていると致命的な(**fatal**)エラーになることがあります。
新しい引数が追加されたメソッドは、そのリリースの移行ガイドに掲載されます。

下記のテーブルはいくつかのユースケースとCakePHPに予定する互換性についての概要と\
なります:

+-------------------------------------+--------------------------+
| すること                            | 互換性                   |
+=====================================+==========================+
| クラスに対するタイプヒント          | 有り                     |
+-------------------------------------+--------------------------+
| 新しいインスタンスの作成            | 有り                     |
+-------------------------------------+--------------------------+
| クラスの継承                        | 有り                     |
+-------------------------------------+--------------------------+
| publicプロパティへのアクセス        | 有り                     |
+-------------------------------------+--------------------------+
| publicメソッドの呼び出し            | 有り                     |
+-------------------------------------+--------------------------+
| **クラスを継承して...**                                        |
+-------------------------------------+--------------------------+
| publicプロパティをオーバーライド    | 有り                     |
+-------------------------------------+--------------------------+
| protectedプロパティにアクセス       | 無し [1]_                |
+-------------------------------------+--------------------------+
| protectedプロパティをオーバーライド | 無し [1]_                |
+-------------------------------------+--------------------------+
| protectedメソッドをオーバーライド   | 無し [1]_                |
+-------------------------------------+--------------------------+
| protectedメソッドの呼び出し         | 無し [1]_                |
+-------------------------------------+--------------------------+
| publicプロパティの追加              | 無し                     |
+-------------------------------------+--------------------------+
| publicメソッドの追加                | 無し                     |
+-------------------------------------+--------------------------+
| オーバーライドされたメソッド        | 無し [1]_                |
| への引数の追加                      |                          |
+-------------------------------------+--------------------------+
| 既存メソッドへのデフォルト          | 有り                     |
| 引数の追加                          |                          |
+-------------------------------------+--------------------------+

CakePHPでの作業
===============

CakePHPをより良くする手助けをしようという場合、機能の追加・変更時に以下の\
ガイドラインに沿うように頭にとどめておいてください:

マイナーリリースでは次のことができます:

+-------------------------------+--------------------------+
| マイナーリリースでできること                             |
+===============================+==========================+
| **クラス**                                               |
+-------------------------------+--------------------------+
| クラスの削除                  | 不可                     |
+-------------------------------+--------------------------+
| インターフェースの削除        | 不可                     |
+-------------------------------+--------------------------+
| トレイトの削除                | 不可                     |
+-------------------------------+--------------------------+
| finalにする                   | 不可                     |
+-------------------------------+--------------------------+
| abstractにする                | 不可                     |
+-------------------------------+--------------------------+
| 名前の変更                    | 可  [2]_                 |
+-------------------------------+--------------------------+
| **プロパティ**                                           |
+-------------------------------+--------------------------+
| publicプロパティの追加        | 可                       |
+-------------------------------+--------------------------+
| publicプロパティの削除        | 不可                     |
+-------------------------------+--------------------------+
| protectedプロパティの追加     | 可                       |
+-------------------------------+--------------------------+
| protectedプロパティの削除     | 可[3]_                   |
+-------------------------------+--------------------------+
| **メソッド**                                             |
+-------------------------------+--------------------------+
| publicメソッドの追加          | 可                       |
+-------------------------------+--------------------------+
| publicメソッドの削除          | 不可                     |
+-------------------------------+--------------------------+
| protectedメソッドの追加       | 可                       |
+-------------------------------+--------------------------+
| 親クラスへの移動              | 可                       |
+-------------------------------+--------------------------+
| protectedメソッドの削除       | 可[3]_                   |
+-------------------------------+--------------------------+
| 可視性の減少                  | 不可                     |
+-------------------------------+--------------------------+
| メソッド名の変更              | 可[2]_                   |
+-------------------------------+--------------------------+
| デフォルト値つき引数の追加    | 可                       |
+-------------------------------+--------------------------+
| 必須引数の追加                | 不可                     |
+-------------------------------+--------------------------+


.. [1] マイナーリリースでコードが破壊される *恐れが* あります。
       詳細は移行ガイドをチェックしてください。
.. [2] 古いクラス名・メソッド名を利用可能なようの残すことで名前の変更ができます。
       通常、名前の変更は重要な利点を持っていない限り避けられます。
.. [3] 出来る限り避けましょう。削除したことは移行ガイドに掲載する必要があります。
